/**
 * @param {character[][]} board
 * @return {boolean}
 */
var isValidSudoku = function(board) {
    const row = {}
    const column = {}
    const box = {}
    for(let i=0;i<9;i++){
        for(let j=0;j<9;j++){
            const value = board[i][j];
            if(value !== '.'){
                const boxidx = Math.floor(i/3)*3+Math.floor(j/3);
                if( row[`${i}-${value}`] || column[`${j}-${value}`] || box[`${boxidx}-${value}`]){
                    return false;
                }
                row[`${i}-${value}`] = true;
                column[`${j}-${value}`] = true;
                box[`${boxidx}-${value}`] = true;
            }
        }
    }
    return true;
};
/**
create the forloop for row & column(i,j).
    Then it will visit individual i & j. =>board[i][j]
        I would prapose the box index like this
            const boxidx = Math.floor(i/3)*3+Math.floor(j/3);
Using map create row, column & box Map.
we can save the value into the map. 
    =>const value = board[i][j];
      row[`${i}-${value}`] = true;
      column[`${j}-${value}`] = true;
      box[`$[boxidx]-$[value]`] = true;

Check, if this key already exist in our Map
    if(row, column, box ) 
    {
        return false
    }
    return `otherwise push the value into the map`
Make sure the value is not a dot(.)

space: O(1) //Everything is constant
time: O(1) 
 */
