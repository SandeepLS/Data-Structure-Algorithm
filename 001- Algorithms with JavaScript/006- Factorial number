Factorial:-number of a non-negative integer 'n'.
denoted n!, is the product of all positive integers, less than or equal to 'n'.
Factorial of zero is 1.
Factorial of one is 1.
factorial(4)=4*3*2*1 =24
factorial(5)=5*4*3*2*1 =120

Ex:
function factorial(n){
    let result = 1;
    for(let i=2; i<=n; i++){
        result = result * i;
    }
    return result;
}
console.log(factorial(1));  //1
console.log(factorial(2));  //1          //Big(O) = O(n);
console.log(factorial(5));  //120
-----------------------------------------------------------------------------------
Ex:userInput
const readline = require('readline');

const rl = readline.createInterface({
    input:process.stdin,
    output:process.stdout
});

function factorial(n){
    let result = 1;
    for(let i=2;i<=n;i++){
        result = result * i;
    }
    return result;
}

rl.question("Enter a factorial num:", function(userInput){
    const n = parseInt(userInput);
    const output = factorial(n);
    console.log(output);
    rl.close();
})
---------------------------------------OR--------------------------------------------
function factorial(n){
      if(n==0)        //it will check each step(Maximum call stack size exceeded).
      return 1;
      else
      return n* factorial(n-1);
  } 
  let num = 5;
  const result = factorial(num);
  console.log(result);
  O/P:-120

/*
  Explaination:-When we the Factorial 5, it is going to stack.
  When we call the factorial of 4, it will create one more entry in the stack.
  Again it will new call factorial of 3,....so on.
  like:-
  factorial(1) -> it will return 1.
  factorial(2) -> it will return 2.            :-It's recursion, function calling itself.
  factorial(3) -> It will return 6.
  factorial(4) -> It will return 24.
  factorial(5) -> It will return 120.
*/
