const rollNo = [4, 6, 1, 3, 2, 0];
const n = rollNo.length; // Calculate the length of the array

function bubbleSort() {
    for (let iteration = 0; iteration < n - 1; iteration++) {
        for (let j = 0; j < n - iteration - 1; j++) { // Compare adjacent elements
            if (rollNo[j] > rollNo[j + 1]) {
                // Swap elements
                const x = rollNo[j];
                rollNo[j] = rollNo[j + 1];
                rollNo[j + 1] = x;
            }
        }
        // Log the state of the array after each iteration
        console.log(`[${rollNo.join(", ")}] ${iteration}`);
    }
}
bubbleSort();

O/P:-
[4, 1, 3, 2, 0, 6] 0
[1, 3, 2, 0, 4, 6] 1
[1, 2, 0, 3, 4, 6] 2
[1, 0, 2, 3, 4, 6] 3
[0, 1, 2, 3, 4, 6] 4
-----------------------------------------------------------------------------------------
rollNo.join(", ") converts the array into a string with elements separated by commas.

Purpose of n - iteration - 1 :-
> n: The total number of elements in the array.
> iteration: Represents the current pass of the outer loop.
  After the first pass, the largest element is sorted. After the second pass, the two largest elements are sorted, and so on.
> n - iteration - 1:
  Limits the range of the inner loop to exclude the already sorted portion of the array.

Example Walkthrough:-
Consider an array: [4, 1, 3, 2, 0, 6] (with n = 6).
1. First Pass (iteration = 0):
   Inner loop runs from j = 0 to j < n - 0 - 1 = 5 (indices 0 to 4).
   The largest element 6 is bubbled to its correct position (last index).
2. Second Pass (iteration = 1):
   Inner loop runs from j = 0 to j < n - 1 - 1 = 4 (indices 0 to 3).
   The next largest element (4) is bubbled to the second last position.
3. Third Pass (iteration = 2):
   Inner loop runs from j = 0 to j < n - 2 - 1 = 3 (indices 0 to 2).
   The next largest element (3) is bubbled to its correct position.

Why Use n - iteration - 1? :-
Efficiency: Reduces unnecessary comparisons for elements that are already sorted.
Correctness: Ensures that each pass of the inner loop processes only the unsorted portion of the array.
