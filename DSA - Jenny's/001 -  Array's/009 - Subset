Subset:
A subset is any combination of elements from the array.
It can be contiguous or non-contiguous.
The order of elements in the original array does not matter.

Example:
For the array [1, 2, 3], the possible subsets are:
// Output: [ [], [1], [2], [1, 2], [3], [1, 3], [2, 3], [1, 2, 3] ]

Ex:
function generateSubsets(arr) {
    const subsets = [];
    const totalSubsets = 1 << arr.length; // 2^n subsets

    for (let i = 0; i < totalSubsets; i++) {
        const subset = [];
        for (let j = 0; j < arr.length; j++) {
            if (i & (1 << j)) {
                subset.push(arr[j]);
            }
        }
        subsets.push(subset);
    }
    return subsets;
}

const arr = [1, 2, 3];
console.log(generateSubsets(arr));
// Output: [ [], [1], [2], [1, 2], [3], [1, 3], [2, 3], [1, 2, 3] ]
----------------------------------------------------------------------
Explaination:-  a bitwise left shift operation in JavaScript.
1. Binary Representation of 1:
   The number 1 in binary is represented as 0001.

2.  Left Shift Operation (<<):
    The left shift operator << shifts the binary representation of a number to the left,
    by the specified number of bits (in this case, arr.length bits).
    For each left shift, a 0 is added to the right of the binary number.

3.  Result:
    Shifting 1 to the left by arr.length bits effectively multiplies 1 by 2^arr.length.
